[workspace]
members = [
    "crates/web/core",
    "crates/web/http",
    "crates/web/url",
    "crates/web/dns",
    "crates/web/dom-derive",
    "crates/graphics/render",
    "crates/graphics/font",
    "crates/graphics/math",
    "crates/compression",
    "crates/util/cli",
    "crates/util/cli-derive",
    "crates/util/mime",
    "crates/util/serialization/serialize",
    "crates/util/serialization/serialize-derive",
    "crates/util/string_interner",
    "crates/util/perfect_hash",
    "crates/util/perfect_hash_derive",
    "crates/sl-std",
    "crates/sys/fontconfig",
    "crates/crypto/ciphers",
    "crates/crypto/hash",
    "crates/crypto/tls",
    "stormlicht",
    "tests/runners/text-rendering",
    "tests/runners/html5lib",
]
resolver = "2"

[workspace.dependencies]
core = { path = "crates/web/core" }
http = { path = "crates/web/http" }
url = { path = "crates/web/url" }
dns = { path = "crates/web/dns" }
dom-derive = { path = "crates/web/dom-derive" }
render = { path = "crates/graphics/render" }
font = { path = "crates/graphics/font" }
math = { path = "crates/graphics/math" }
compression = { path = "crates/compression" }
cli = { path = "crates/util/cli" }
cli-derive = { path = "crates/util/cli-derive" }
mime = { path = "crates/util/mime" }
serialize = { path = "crates/util/serialization/serialize" }
serialize-derive = { path = "crates/util/serialization/serialize-derive" }
string_interner = { path = "crates/util/string_interner" }
perfect_hash = { path = "crates/util/perfect_hash" }
perfect_hash_derive = { path = "crates/util/perfect_hash_derive" }
sl-std = { path = "crates/sl-std" }
fontconfig = { path = "crates/sys/fontconfig" }
ciphers = { path = "crates/crypto/ciphers" }
hash = { path = "crates/crypto/hash" }
tls = { path = "crates/crypto/tls" }

log = "0.4"
criterion = { version = "0.4", features = ["html_reports"] }
syn = "2"
quote = "1"
proc-macro2 = "^1.0.60"

[workspace.package]
authors = ["Simon WÃ¼lker"]
edition = "2021"
repository = "https://github.com/wuelle/stormlicht"
license = "MIT"

[workspace.lints.rust]
rust_2018_idioms = { level = "warn" }

[workspace.lints.clippy]
correctness = { level = "deny" }
perf = { level = "deny" }

# "-1 * x" can be more readable than "-x", especially in complex expressions
neg_multiply = { level = "allow" }

[profile.bench]
debug = true
