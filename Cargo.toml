[workspace]
members = [
    "crates/web",
    "crates/http",
    "crates/url",
    "crates/dns",
    "crates/dom-derive",
    "crates/graphics/render",
    "crates/graphics/font",
    "crates/graphics/image",
    "crates/graphics/math",
    "crates/compression",
    "crates/util/buildutils",
    "crates/util/cli",
    "crates/util/cli-derive",
    "crates/util/html-treebuilding-match",
    "crates/util/mime",
    "crates/util/serialization/serialize",
    "crates/util/serialization/serialize-derive",
    "crates/util/perfect_hash",
    "crates/util/perfect_hash_derive",
    "crates/sl-std",
    "crates/sys/fontconfig",
    "crates/crypto/ciphers",
    "crates/crypto/hash",
    "crates/crypto/tls",
    "stormlicht",
    "tests/runners/text-rendering",
    "tests/runners/html5lib",
    "crates/util/buildutils",
    "crates/js",
    "crates/gc",
    "crates/encodings",
    "crates/ipc",
    "crates/util/serialization/serialize-json",
    "crates/resourceloader",
]
resolver = "2"

[workspace.dependencies]
buildutils = { path = "crates/util/buildutils" }
web = { path = "crates/web" }
http = { path = "crates/http" }
url = { path = "crates/url" }
dns = { path = "crates/dns" }
dom-derive = { path = "crates/dom-derive" }
render = { path = "crates/graphics/render" }
font = { path = "crates/graphics/font" }
html-treebuilding-match = { path = "crates/util/html-treebuilding-match" }
image = { path = "crates/graphics/image" }
math = { path = "crates/graphics/math" }
compression = { path = "crates/compression" }
cli = { path = "crates/util/cli" }
cli-derive = { path = "crates/util/cli-derive" }
mime = { path = "crates/util/mime" }
serialize = { path = "crates/util/serialization/serialize" }
serialize-derive = { path = "crates/util/serialization/serialize-derive" }
perfect_hash = { path = "crates/util/perfect_hash" }
perfect_hash_derive = { path = "crates/util/perfect_hash_derive" }
sl-std = { path = "crates/sl-std" }
fontconfig = { path = "crates/sys/fontconfig" }
ciphers = { path = "crates/crypto/ciphers" }
hash = { path = "crates/crypto/hash" }
tls = { path = "crates/crypto/tls" }
js = { path = "crates/js" }
gc = { path = "crates/gc" }
ipc = { path = "crates/ipc" }
serialize-json = { path = "crates/util/serialization/serialize-json" }
resourceloader = { path = "crates/resourceloader" }

log = "0.4"
criterion = { version = "0.4", features = ["html_reports"] }
syn = { version = "2", features = ["full"] }
quote = "1"
proc-macro2 = "^1.0.60"
libc = { version = "0.2" }
env_logger = { version = "0.10" }

[workspace.package]
authors = ["Simon WÃ¼lker"]
edition = "2021"
repository = "https://github.com/wuelle/stormlicht"
license = "MIT"

[workspace.lints.rust]
rust_2018_idioms = { level = "warn", priority = 1 }

# Ideally this would only affect the "stormlicht" crate,
# but there's no way to both inherit workspace lints *and*
# add crate-specific ones. Either way, its not a big deal.
unexpected_cfgs = { level = "warn", check-cfg = [
    'cfg(chrome, values("gtk", "glazier"))',
] }

[workspace.lints.clippy]
correctness = { level = "deny", priority = 1 }
perf = { level = "deny", priority = 1 }

# "-1 * x" can be more readable than "-x", especially in complex expressions
neg_multiply = { level = "allow" }

# This lint causes a lot of false-positives
suspicious_arithmetic_impl = { level = "allow" }

[profile.bench]
debug = true
